name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - main

    # on: push    # Default will running for every branch.

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'
          flutter-version: '2.10.1' # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get
      - run: flutter packages get

      # Check for any formatting issues in the code.
      - run: flutter format . --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
#      - run: flutter analyze .

      # Run widget tests for our flutter project.
      - run: flutter test core movies tv

      # Build apk.
#      - run: flutter build apk
      - run: flutter build apk --release --split-per-abi
      - run: flutter build appbundle

      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}